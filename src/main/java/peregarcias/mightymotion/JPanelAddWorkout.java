package peregarcias.mightymotion;



import java.awt.Color;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import peregarcias.mightymotion.dataaccess.DataAccess;
import peregarcias.mightymotion.dto.Exercicis;
import peregarcias.mightymotion.dto.Usuario;
import peregarcias.mightymotion.dto.Workouts;

/**
 *
 * @author morda
 */
public class JPanelAddWorkout extends javax.swing.JPanel {
        
    private JPanelPantallaPrincipal pantallaPrincipal; // Referencia al panel principal
    private DataAccess da = new DataAccess(); // Acceso a datos
    private Map<String, Workouts> mapWorkouts = new HashMap<>(); // Mapa para relacionar nombres con objetos Workouts
    private Map<String, Exercicis> mapEjercicios = new HashMap<>(); // Mapa para ejercicios
    private JList<String> listWorkouts; // Lista para mostrar workouts
    private JList<String> listEjercicios; // Lista para mostrar ejercicios
   
    public JPanelAddWorkout(JPanelPantallaPrincipal pantallaPrincipal, Usuario usuario, DataAccess da) {
        initComponents();
        setBounds(0, 0, 1000, 900);
        setBackground(new Color(185,208,214));
        this.pantallaPrincipal = pantallaPrincipal;
        this.da = da;
        lstWorkouts.setModel(new DefaultListModel<>());
        lstExercicis.setModel(new DefaultListModel<>());
        
        lstWorkouts.addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                if (!evt.getValueIsAdjusting()) {
                    cargarEjerciciosParaWorkout();
                }
            }
            
        });
        try {
            cargarWorkouts();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        
    }
    
    private void cargarWorkouts() throws SQLException {
        // Obtener todos los workouts desde la base de datos
        List<Workouts> workouts = da.getWorkouts();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        mapWorkouts.clear(); // Limpia el mapa antes de a√±adir nuevos datos

    for (Workouts workout : workouts) {
        String nombreWorkout = workout.toString();
        mapWorkouts.put(nombreWorkout, workout);  
        listModel.addElement(nombreWorkout);     
    }
        lstWorkouts.setModel(listModel);
    }
    private void cargarEjerciciosParaWorkout() {
        List<Exercicis> ejercicios = da.getExercicisByWorkout(1); 
        DefaultListModel model = (DefaultListModel) lstExercicis.getModel();


    for (Exercicis ejercicio : ejercicios) {
        model.addElement(ejercicio.getDescripcio());
    }
    lstExercicis.setModel(model);
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstWorkouts = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstExercicis = new javax.swing.JList<>();
        btnvolver = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Modern M", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 44, 58));
        jLabel1.setText("Ejercicios");
        add(jLabel1);
        jLabel1.setBounds(340, 20, 120, 40);

        jLabel2.setFont(new java.awt.Font("Modern M", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 44, 58));
        jLabel2.setText("Workouts disponibles");
        add(jLabel2);
        jLabel2.setBounds(20, 20, 180, 40);

        jScrollPane1.setViewportView(lstWorkouts);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 200, 380);

        jScrollPane2.setViewportView(lstExercicis);

        add(jScrollPane2);
        jScrollPane2.setBounds(290, 60, 220, 380);

        btnvolver.setFont(new java.awt.Font("Modern M", 0, 14)); // NOI18N
        btnvolver.setForeground(new java.awt.Color(0, 44, 58));
        btnvolver.setText("VOLVER");
        btnvolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvolverActionPerformed(evt);
            }
        });
        add(btnvolver);
        btnvolver.setBounds(395, 460, 110, 22);
    }// </editor-fold>//GEN-END:initComponents

    private void btnvolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvolverActionPerformed
        
        Main mainFrame = (Main) SwingUtilities.getWindowAncestor(this);
        mainFrame.setContentPane(pantallaPrincipal);
        mainFrame.revalidate();
        mainFrame.repaint();
       
    }//GEN-LAST:event_btnvolverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnvolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstExercicis;
    private javax.swing.JList<String> lstWorkouts;
    // End of variables declaration//GEN-END:variables
}
