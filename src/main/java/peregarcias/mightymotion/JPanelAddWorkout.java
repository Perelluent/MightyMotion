/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package peregarcias.mightymotion;

import java.awt.Color;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import peregarcias.mightymotion.dataaccess.DataAccess;
import peregarcias.mightymotion.dto.Exercicis;
import peregarcias.mightymotion.dto.Usuario;
import peregarcias.mightymotion.dto.Workouts;

/**
 *
 * @author morda
 */
public class JPanelAddWorkout extends javax.swing.JPanel {
        
    private JPanelPantallaPrincipal pantallaPrincipal; // Referencia al panel principal
    private DataAccess da = new DataAccess(); // Acceso a datos
    private Map<String, Workouts> mapWorkouts = new HashMap<>(); // Mapa para relacionar nombres con objetos Workouts
    private Map<String, Exercicis> mapEjercicios = new HashMap<>(); // Mapa para ejercicios
    private JList<String> listWorkouts; // Lista para mostrar workouts
    private JList<String> listEjercicios; // Lista para mostrar ejercicios
   
    public JPanelAddWorkout(Usuario usuario, DataAccess da) {
        initComponents();
        setBounds(0, 0, 1000, 900);
        setBackground(new Color(185,208,214));
        
    }
    
    private void cargarWorkouts() throws SQLException {
        // Obtener todos los workouts desde la base de datos
        List<Workouts> workouts = da.getWorkouts();
        DefaultListModel<String> model = (DefaultListModel<String>) listWorkouts.getModel();
        model.clear();
        mapWorkouts.clear(); // Limpia el mapa anterior

        for (Workouts workout : workouts) {
            String nombreWorkout = workout.toString(); // Ajusta según tu implementación de `toString`
            mapWorkouts.put(nombreWorkout, workout); // Relaciona el nombre con el objeto Workout
            model.addElement(nombreWorkout); // Añade el nombre al modelo de la lista
        }
    }
    private void cargarEjerciciosParaWorkout() {
        String nombreSeleccionado = listWorkouts.getSelectedValue();
        if (nombreSeleccionado != null) {
            Workouts workoutSeleccionado = mapWorkouts.get(nombreSeleccionado);
            if (workoutSeleccionado != null) {
                List<Exercicis> ejercicios = da.getExercicisByWorkout(workoutSeleccionado.getId());
                DefaultListModel<String> model = (DefaultListModel<String>) listEjercicios.getModel();
                model.clear();
                mapEjercicios.clear(); // Limpia el mapa anterior

                for (Exercicis ejercicio : ejercicios) {
                    String nombreEjercicio = ejercicio.toString(); // Ajusta según tu implementación de `toString`
                    mapEjercicios.put(nombreEjercicio, ejercicio); // Relaciona el nombre con el objeto Ejercicio
                    model.addElement(nombreEjercicio); // Añade el nombre al modelo de la lista
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Modern M", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 44, 58));
        jLabel1.setText("Ejercicios");
        add(jLabel1);
        jLabel1.setBounds(340, 20, 120, 40);

        jLabel2.setFont(new java.awt.Font("Modern M", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 44, 58));
        jLabel2.setText("Workouts disponibles");
        add(jLabel2);
        jLabel2.setBounds(20, 20, 180, 40);

        jScrollPane1.setViewportView(jList1);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 60, 200, 380);

        jScrollPane2.setViewportView(jList2);

        add(jScrollPane2);
        jScrollPane2.setBounds(290, 60, 220, 380);

        jButton1.setFont(new java.awt.Font("Modern M", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 44, 58));
        jButton1.setText("VOLVER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(395, 460, 110, 22);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pantallaPrincipal.removeAll();
        pantallaPrincipal.add(this);
        pantallaPrincipal.revalidate();
        pantallaPrincipal.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
